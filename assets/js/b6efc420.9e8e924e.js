"use strict";(self.webpackChunkgasps_docs=self.webpackChunkgasps_docs||[]).push([[305],{3905:(e,n,o)=>{o.d(n,{Zo:()=>u,kt:()=>p});var r=o(7294);function t(e,n,o){return n in e?Object.defineProperty(e,n,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[n]=o,e}function l(e,n){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),o.push.apply(o,r)}return o}function a(e){for(var n=1;n<arguments.length;n++){var o=null!=arguments[n]?arguments[n]:{};n%2?l(Object(o),!0).forEach((function(n){t(e,n,o[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):l(Object(o)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(o,n))}))}return e}function i(e,n){if(null==e)return{};var o,r,t=function(e,n){if(null==e)return{};var o,r,t={},l=Object.keys(e);for(r=0;r<l.length;r++)o=l[r],n.indexOf(o)>=0||(t[o]=e[o]);return t}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)o=l[r],n.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(t[o]=e[o])}return t}var s=r.createContext({}),c=function(e){var n=r.useContext(s),o=n;return e&&(o="function"==typeof e?e(n):a(a({},n),e)),o},u=function(e){var n=c(e.components);return r.createElement(s.Provider,{value:n},e.children)},f="mdxType",C={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},w=r.forwardRef((function(e,n){var o=e.components,t=e.mdxType,l=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),f=c(o),w=t,p=f["".concat(s,".").concat(w)]||f[w]||C[w]||l;return o?r.createElement(p,a(a({ref:n},u),{},{components:o})):r.createElement(p,a({ref:n},u))}));function p(e,n){var o=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var l=o.length,a=new Array(l);a[0]=w;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i[f]="string"==typeof e?e:t,a[1]=i;for(var c=2;c<l;c++)a[c]=o[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,o)}w.displayName="MDXCreateElement"},2160:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>s,contentTitle:()=>a,default:()=>C,frontMatter:()=>l,metadata:()=>i,toc:()=>c});var r=o(7462),t=(o(7294),o(3905));const l={title:"Configuring",sidebar_position:1},a=void 0,i={unversionedId:"configuration/configuring",id:"configuration/configuring",title:"Configuring",description:"This is the default configuration for Sense, most things will be disabled by default.",source:"@site/docs/sense/configuration/configuring.md",sourceDirName:"configuration",slug:"/configuration/configuring",permalink:"/sense/configuration/configuring",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Configuring",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Booting the Library",permalink:"/sense/getting-started/booting-library"},next:{title:"Game Functions",permalink:"/sense/functions/"}},s={},c=[],u={toc:c},f="wrapper";function C(e){let{components:n,...o}=e;return(0,t.kt)(f,(0,r.Z)({},u,o,{components:n,mdxType:"MDXLayout"}),(0,t.kt)("p",null,"This is the default configuration for Sense, most things will be disabled by default."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-lua"},'Sense = {\n  whitelist = {}, -- When this table contains at least 1 user id, it will only show esp for those players.\n  sharedSettings = {\n      textSize = 13,\n      textFont = 2,\n      limitDistance = false, -- Set a maximum render distance\n      maxDistance = 150,\n      useTeamColor = false -- Change all colors to the players team color\n  },\n  teamSettings = {\n      enemy = {\n          enabled = false,\n          box = false,\n          boxColor = { Color3.new(1,0,0), 1 },\n          --boxColor = { "Team Color", 1 }, -- Do this to change a single color to the team color\n          boxOutline = true,\n          boxOutlineColor = { Color3.new(), 1 },\n          boxFill = false,\n          boxFillColor = { Color3.new(1,0,0), 0.5 },\n          healthBar = false,\n          healthyColor = Color3.new(0,1,0),\n          dyingColor = Color3.new(1,0,0),\n          healthBarOutline = true,\n          healthBarOutlineColor = { Color3.new(), 0.5 },\n          healthText = false,\n          healthTextColor = { Color3.new(1,1,1), 1 },\n          healthTextOutline = true,\n          healthTextOutlineColor = Color3.new(),\n          box3d = false,\n          box3dColor = { Color3.new(1,0,0), 1 },\n          name = false,\n          nameColor = { Color3.new(1,1,1), 1 },\n          nameOutline = true,\n          nameOutlineColor = Color3.new(),\n          weapon = false,\n          weaponColor = { Color3.new(1,1,1), 1 },\n          weaponOutline = true,\n          weaponOutlineColor = Color3.new(),\n          distance = false,\n          distanceColor = { Color3.new(1,1,1), 1 },\n          distanceOutline = true,\n          distanceOutlineColor = Color3.new(),\n          tracer = false,\n          tracerOrigin = "Bottom",\n          tracerColor = { Color3.new(1,0,0), 1 },\n          tracerOutline = true,\n          tracerOutlineColor = { Color3.new(), 1 },\n          offScreenArrow = false,\n          offScreenArrowColor = { Color3.new(1,1,1), 1 },\n          offScreenArrowSize = 15,\n          offScreenArrowRadius = 150,\n          offScreenArrowOutline = true,\n          offScreenArrowOutlineColor = { Color3.new(), 1 },\n          chams = false,\n          chamsVisibleOnly = false,\n          chamsFillColor = { Color3.new(0.2, 0.2, 0.2), 0.5 },\n          chamsOutlineColor = { Color3.new(1,0,0), 0 },\n      },\n      friendly = {\n          enabled = false,\n          box = false,\n          boxColor = { Color3.new(0,1,0), 1 },\n          boxOutline = true,\n          boxOutlineColor = { Color3.new(), 1 },\n          boxFill = false,\n          boxFillColor = { Color3.new(0,1,0), 0.5 },\n          healthBar = false,\n          healthyColor = Color3.new(0,1,0),\n          dyingColor = Color3.new(1,0,0),\n          healthBarOutline = true,\n          healthBarOutlineColor = { Color3.new(), 0.5 },\n          healthText = false,\n          healthTextColor = { Color3.new(1,1,1), 1 },\n          healthTextOutline = true,\n          healthTextOutlineColor = Color3.new(),\n          box3d = false,\n          box3dColor = { Color3.new(0,1,0), 1 },\n          name = false,\n          nameColor = { Color3.new(1,1,1), 1 },\n          nameOutline = true,\n          nameOutlineColor = Color3.new(),\n          weapon = false,\n          weaponColor = { Color3.new(1,1,1), 1 },\n          weaponOutline = true,\n          weaponOutlineColor = Color3.new(),\n          distance = false,\n          distanceColor = { Color3.new(1,1,1), 1 },\n          distanceOutline = true,\n          distanceOutlineColor = Color3.new(),\n          tracer = false,\n          tracerOrigin = "Bottom",\n          tracerColor = { Color3.new(0,1,0), 1 },\n          tracerOutline = true,\n          tracerOutlineColor = { Color3.new(), 1 },\n          offScreenArrow = false,\n          offScreenArrowColor = { Color3.new(1,1,1), 1 },\n          offScreenArrowSize = 15,\n          offScreenArrowRadius = 150,\n          offScreenArrowOutline = true,\n          offScreenArrowOutlineColor = { Color3.new(), 1 },\n          chams = false,\n          chamsVisibleOnly = false,\n          chamsFillColor = { Color3.new(0.2, 0.2, 0.2), 0.5 },\n          chamsOutlineColor = { Color3.new(0,1,0), 0 }\n      }\n  }\n}\n')))}C.isMDXComponent=!0}}]);